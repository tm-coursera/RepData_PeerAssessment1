library(dplyr)
library(tidyr)
library(lubridate)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file (fileUrl, destfile="activity.zip", method="curl")
unzip('activity.zip', exdir=".")
dfa <- read.csv("activity.csv", header=TRUE, stringsAsFactors = FALSE)
str(dfa)
summary(dfa)
sumsteps <- summarise(dfa, totalsteps=sum(steps, na.rm=TRUE))
sumsteps$totalsteps
stepsbyday <- dfa %>%
group_by(date) %>%
summarise(stepsbd=sum(steps, na.rm = TRUE))
hist(stepsbyday$stepsbd, xlab="Steps per day", main="Histogram of daily steps")
summarydf <- summarise(stepsbyday,
totalsteps=sum(stepsbd),
meansteps=mean(stepsbd),
mediansteps=median(stepsbd))
summarydf
stepsby5 <- dfa %>%
drop_na() %>%
group_by(interval) %>%
summarise(meansteps=mean(steps))
head(stepsby5)
plot(stepsby5$interval, stepsby5$meansteps, type="l", xlab="Time (by 5 min intervals)",
ylab="average number of steps", main="Average number of steps by time stamp")
maxsteps5 <- max(stepsby5$meansteps)
maxinterval <- as.numeric(stepsby5[stepsby5$meansteps==maxsteps5,"interval"])
maxinterval
summarise(dfa, naCount=sum(is.na(steps)))
dfaImputed <- dfa %>%
left_join(y=stepsby5, by=c("interval"="interval")) %>%
mutate(steps = as.double(steps))%>%
mutate(steps = if_else(!is.na(steps), steps, meansteps))
summary(dfaImputed)
stepsbydayImputed <- dfaImputed %>%
group_by(date) %>%
summarise(stepsbd=sum(steps, na.rm = TRUE))
hist(stepsbydayImputed$stepsbd, xlab="Steps per day", main="Histogram of daily steps
with missing data imputed")
summarydfImputed <- summarise(stepsbydayImputed,
totalstepsImp=sum(stepsbd),
meanstepsImp=mean(stepsbd),
medianstepsImp=median(stepsbd))
summarydfImputed
curr_locale <- Sys.getlocale("LC_TIME")
dfaImputedWD <- dfaImputed %>%
mutate(dayoftheweek = wday(as.Date(date), label=TRUE, abbr=FALSE, locale='us'),
daytype = if_else(dayoftheweek %in% c('Monday', 'Tuesday', 'Wednesday',
'Thursday', 'Friday'), 'weekday', 'weekend')) %>%
# To be able to produce the requested graph the data is again grouped and summmarized
group_by(interval, daytype) %>%
summarize(steps=mean(steps))
summarydfImputed$meanstepsImp-summarydf$meansteps
summarydfImputed$medianstepsImp-summarydf$mediansteps
library(lattice)
dfaImputedWD <- dfaImputed %>%
mutate(dayoftheweek = wday(as.Date(date), label=TRUE, abbr=FALSE, locale='us'),
daytype = as.factor(if_else(dayoftheweek %in% c('Monday', 'Tuesday',
'Wednesday', 'Thursday', 'Friday'), 'weekday',
'weekend'))) %>%
# To be able to produce the requested graph the data is again grouped and summmarized
group_by(interval, daytype) %>%
summarize(steps=mean(steps))
library(dplyr)
library(tidyr)
library(lubridate)
library(lattice)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file (fileUrl, destfile="activity.zip", method="curl")
unzip('activity.zip', exdir=".")
dfa <- read.csv("activity.csv", header=TRUE, stringsAsFactors = FALSE)
str(dfa)
summary(dfa)
sumsteps <- summarise(dfa, totalsteps=sum(steps, na.rm=TRUE))
sumsteps$totalsteps
stepsbyday <- dfa %>%
group_by(date) %>%
summarise(stepsbd=sum(steps, na.rm = TRUE))
hist(stepsbyday$stepsbd, xlab="Steps per day", main="Histogram of daily steps")
summarydf <- summarise(stepsbyday,
totalsteps=sum(stepsbd),
meansteps=mean(stepsbd),
mediansteps=median(stepsbd))
summarydf
stepsby5 <- dfa %>%
drop_na() %>%
group_by(interval) %>%
summarise(meansteps=mean(steps))
head(stepsby5)
plot(stepsby5$interval, stepsby5$meansteps, type="l", xlab="Time (by 5 min intervals)",
ylab="average number of steps", main="Average number of steps by time stamp")
maxsteps5 <- max(stepsby5$meansteps)
maxinterval <- as.numeric(stepsby5[stepsby5$meansteps==maxsteps5,"interval"])
maxinterval
summarise(dfa, naCount=sum(is.na(steps)))
dfaImputed <- dfa %>%
left_join(y=stepsby5, by=c("interval"="interval")) %>%
mutate(steps = as.double(steps))%>%
mutate(steps = if_else(!is.na(steps), steps, meansteps))
summary(dfaImputed)
stepsbydayImputed <- dfaImputed %>%
group_by(date) %>%
summarise(stepsbd=sum(steps, na.rm = TRUE))
hist(stepsbydayImputed$stepsbd, xlab="Steps per day", main="Histogram of daily steps
with missing data imputed")
summarydfImputed <- summarise(stepsbydayImputed,
totalstepsImp=sum(stepsbd),
meanstepsImp=mean(stepsbd),
medianstepsImp=median(stepsbd))
summarydfImputed
curr_locale <- Sys.getlocale("LC_TIME")
dfaImputedWD <- dfaImputed %>%
mutate(dayoftheweek = wday(as.Date(date), label=TRUE, abbr=FALSE, locale='us'),
daytype = as.factor(if_else(dayoftheweek %in% c('Monday', 'Tuesday',
'Wednesday', 'Thursday', 'Friday'), 'weekday',
'weekend'))) %>%
# To be able to produce the requested graph the data is again grouped and summmarized
group_by(interval, daytype) %>%
summarize(steps=mean(steps))
xyplot(steps ~ interval | daytype, data=dfaImputedWD, layout=c(1,2))
xyplot(steps ~ interval | daytype, data=dfaImputedWD, layout=c(1,2), type="smooth")
xyplot(steps ~ interval | daytype, data=dfaImputedWD, layout=c(1,2), type="g")
xyplot(steps ~ interval | daytype, data=dfaImputedWD, layout=c(1,2), type="p")
xyplot(steps ~ interval | daytype, data=dfaImputedWD, layout=c(1,2), type="p", 'g')
xyplot(steps ~ interval | daytype, data=dfaImputedWD, layout=c(1,2), type=c("p","g"))
xyplot(steps ~ interval | daytype, data=dfaImputedWD, layout=c(1,2), type=c("p","g", "line"))
xyplot(steps ~ interval | daytype, data=dfaImputedWD, layout=c(1,2), type=c("p","g", "l"))
xyplot(steps ~ interval | daytype, data=dfaImputedWD, layout=c(1,2), type=c("g", "l"))
xyplot(steps ~ interval | daytype, data=dfaImputedWD, layout=c(1,2), type=c("g", "l"),
main="Average number of steps by 5 minute intervals")
rm(list=ls)
rm(list=ls())
library(dplyr)
library(tidyr)
library(lubridate)
library(lattice)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file (fileUrl, destfile="activity.zip", method="curl")
unzip('activity.zip', exdir=".")
dfa <- read.csv("activity.csv", header=TRUE, stringsAsFactors = FALSE)
str(dfa)
summary(dfa)
sumsteps <- summarise(dfa, totalsteps=sum(steps, na.rm=TRUE))
sumsteps$totalsteps
stepsbyday <- dfa %>%
group_by(date) %>%
summarise(stepsbd=sum(steps, na.rm = TRUE))
hist(stepsbyday$stepsbd, xlab="Steps per day", main="Histogram of daily steps")
summarydf <- summarise(stepsbyday,
totalsteps=sum(stepsbd),
meansteps=mean(stepsbd),
mediansteps=median(stepsbd))
summarydf
stepsby5 <- dfa %>%
drop_na() %>%
group_by(interval) %>%
summarise(meansteps=mean(steps))
head(stepsby5)
plot(stepsby5$interval, stepsby5$meansteps, type="l", xlab="Time (by 5 min intervals)",
ylab="average number of steps", main="Average number of steps by time stamp")
maxsteps5 <- max(stepsby5$meansteps)
maxinterval <- as.numeric(stepsby5[stepsby5$meansteps==maxsteps5,"interval"])
maxinterval
summarise(dfa, naCount=sum(is.na(steps)))
dfaImputed <- dfa %>%
left_join(y=stepsby5, by=c("interval"="interval")) %>%
mutate(steps = as.double(steps))%>%
mutate(steps = if_else(!is.na(steps), steps, meansteps))
summary(dfaImputed)
stepsbydayImputed <- dfaImputed %>%
group_by(date) %>%
summarise(stepsbd=sum(steps, na.rm = TRUE))
hist(stepsbydayImputed$stepsbd, xlab="Steps per day", main="Histogram of daily steps
with missing data imputed")
summarydfImputed <- summarise(stepsbydayImputed,
totalstepsImp=sum(stepsbd),
meanstepsImp=mean(stepsbd),
medianstepsImp=median(stepsbd))
summarydfImputed
curr_locale <- Sys.getlocale("LC_TIME")
dfaImputedWD <- dfaImputed %>%
mutate(dayoftheweek = wday(as.Date(date), label=TRUE, abbr=FALSE, locale='us'),
daytype = as.factor(if_else(dayoftheweek %in% c('Monday', 'Tuesday',
'Wednesday', 'Thursday', 'Friday'), 'weekday',
'weekend'))) %>%
# To be able to produce the requested graph the data is again grouped and summmarized
group_by(interval, daytype) %>%
summarize(steps=mean(steps))
xyplot(steps ~ interval | daytype, data=dfaImputedWD, layout=c(1,2), type=c("g", "l"),
main="Average number of steps by 5 minute intervals")
Comparing the raw and the new imputed dataset, the mean increases with
**`r summarydfImputed$meanstepsImp-summarydf$meansteps`** and the median increases with `r summarydfImputed$medianstepsImp-summarydf$mediansteps`.
Comparing the raw and the new imputed dataset, the mean increases with
**`r summarydfImputed$meanstepsImp-summarydf$meansteps`** and the median increases with `r summarydfImputed$medianstepsImp-summarydf$mediansteps`.
**summarydfImputed$meanstepsImp-summarydf$meansteps**
**summarydfImputed$meanstepsImp-summarydf$meansteps**
summarydfImputed$meanstepsImp-summarydf$meansteps, color="red"
text_spec(summarydfImputed$meanstepsImp-summarydf$meansteps, color="red")
install.packages("kableExtra")
text_spec(summarydfImputed$meanstepsImp-summarydf$meansteps, color="red")
library(kableExtra)
text_spec(summarydfImputed$meanstepsImp-summarydf$meansteps, color="red")
summarydfImputed$medianstepsImp-summarydf$mediansteps
text_spec(summarydfImputed$medianstepsImp-summarydf$mediansteps, color="red"
)
text_spec(summarydfImputed$medianstepsImp-summarydf$mediansteps, color="red")
text_spec(round(summarydfImputed$meanstepsImp-summarydf$meansteps), color="red")
text_spec(round(summarydfImputed$medianstepsImp-summarydf$mediansteps), color="red")
library(dplyr)
library(tidyr)
library(lubridate)
library(lattice)
library(kableExtra)
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file (fileUrl, destfile="activity.zip", method="curl")
unzip('activity.zip', exdir=".")
dfa <- read.csv("activity.csv", header=TRUE, stringsAsFactors = FALSE)
str(dfa)
summary(dfa)
sumsteps <- summarise(dfa, totalsteps=sum(steps, na.rm=TRUE))
sumsteps$totalsteps
stepsbyday <- dfa %>%
group_by(date) %>%
summarise(stepsbd=sum(steps, na.rm = TRUE))
hist(stepsbyday$stepsbd, xlab="Steps per day", main="Histogram of daily steps")
summarydf <- summarise(stepsbyday,
totalsteps=sum(stepsbd),
meansteps=mean(stepsbd),
mediansteps=median(stepsbd))
summarydf
stepsby5 <- dfa %>%
drop_na() %>%
group_by(interval) %>%
summarise(meansteps=mean(steps))
head(stepsby5)
plot(stepsby5$interval, stepsby5$meansteps, type="l", xlab="Time (by 5 min intervals)",
ylab="average number of steps", main="Average number of steps by time stamp")
maxsteps5 <- max(stepsby5$meansteps)
maxinterval <- as.numeric(stepsby5[stepsby5$meansteps==maxsteps5,"interval"])
maxinterval
summarise(dfa, naCount=sum(is.na(steps)))
dfaImputed <- dfa %>%
left_join(y=stepsby5, by=c("interval"="interval")) %>%
mutate(steps = as.double(steps))%>%
mutate(steps = if_else(!is.na(steps), steps, meansteps))
summary(dfaImputed)
stepsbydayImputed <- dfaImputed %>%
group_by(date) %>%
summarise(stepsbd=sum(steps, na.rm = TRUE))
hist(stepsbydayImputed$stepsbd, xlab="Steps per day", main="Histogram of daily steps
with missing data imputed")
summarydfImputed <- summarise(stepsbydayImputed,
totalstepsImp=sum(stepsbd),
meanstepsImp=mean(stepsbd),
medianstepsImp=median(stepsbd))
summarydfImputed
curr_locale <- Sys.getlocale("LC_TIME")
dfaImputedWD <- dfaImputed %>%
mutate(dayoftheweek = wday(as.Date(date), label=TRUE, abbr=FALSE, locale='us'),
daytype = as.factor(if_else(dayoftheweek %in% c('Monday', 'Tuesday',
'Wednesday', 'Thursday', 'Friday'), 'weekday',
'weekend'))) %>%
# To be able to produce the requested graph the data is again grouped and summmarized
group_by(interval, daytype) %>%
summarize(steps=mean(steps))
xyplot(steps ~ interval | daytype, data=dfaImputedWD, layout=c(1,2), type=c("g", "l"),
main="Average number of steps by 5 minute intervals")
